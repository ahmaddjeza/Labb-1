{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yes\\\\OneDrive\\\\Skrivbord\\\\Todo\\\\min-nya-app\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Question from './Question';\nimport ScoreBoard from './ScoreBoard';\nimport Result from './Result';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  // State för frågor, aktuell frågeindex, användarens svar och poäng\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const answerInputRef = useRef(null);\n  const myNumber = 1;\n\n  // Funktion som körs när komponenten laddas för att ställa in frågorna\n  useEffect(() => {\n    setQuestions([{\n      question: \"Vad är huvudstaden i Frankrike?\",\n      correctAnswer: \"Paris\"\n    }, {\n      question: \"Vad är huvudstaden i Spanien?\",\n      correctAnswer: \"Madrid\"\n    }, {\n      question: \"Vad är huvudstaden i Sverige?\",\n      correctAnswer: \"Stockholm\"\n    }]);\n  }, []);\n\n  // Funktion för att hantera inlämning av svar\n  const handleAnswerSubmit = event => {\n    setScore(myNumber + 1);\n    event.preventDefault(); // Förhindra standardbeteende för formulär\n    // Kontrollera om användarens svar är korrekt och uppdatera poängen\n    if (userAnswer.toLowerCase() === questions[currentQuestionIndex].correctAnswer.toLowerCase()) {\n      setScore(score + 1);\n    }\n    // Återställ användarens svar och flytta till nästa fråga\n    setUserAnswer('');\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n    answerInputRef.current && answerInputRef.current.focus();\n  };\n  const restartQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setUserAnswer('');\n  };\n  if (currentQuestionIndex >= questions.length) {\n    return /*#__PURE__*/_jsxDEV(Result, {\n      score: score,\n      totalQuestions: questions.length,\n      onRestart: restartQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Annars visa quizet med fråga, poäng och svarsformulär\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Question, {\n      question: questions[currentQuestionIndex].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), \"Fr\\xE5ga : \", myNumber, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAnswerSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: answerInputRef,\n        value: userAnswer,\n        onChange: e => setUserAnswer(e.target.value),\n        type: \"text\",\n        placeholder: \"Ditt svar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"N\\xE4sta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScoreBoard, {\n        score: score,\n        totalQuestions: questions.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"s8ItcWkA3f0mPm4QnAHD50me9Hc=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Question","ScoreBoard","Result","jsxDEV","_jsxDEV","Quiz","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","userAnswer","setUserAnswer","score","setScore","answerInputRef","myNumber","question","correctAnswer","handleAnswerSubmit","event","preventDefault","toLowerCase","current","focus","restartQuiz","length","totalQuestions","onRestart","fileName","_jsxFileName","lineNumber","columnNumber","children","onSubmit","ref","value","onChange","e","target","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/yes/OneDrive/Skrivbord/Todo/min-nya-app/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Question from './Question';\r\nimport ScoreBoard from './ScoreBoard';\r\nimport Result from './Result';\r\n\r\nconst Quiz = () => {\r\n  // State för frågor, aktuell frågeindex, användarens svar och poäng\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n  const [score, setScore] = useState(0);\r\n  const answerInputRef = useRef(null);\r\n  const myNumber = 1;\r\n\r\n  // Funktion som körs när komponenten laddas för att ställa in frågorna\r\n  useEffect(() => {\r\n    setQuestions([\r\n      { question: \"Vad är huvudstaden i Frankrike?\", correctAnswer: \"Paris\" },\r\n      { question: \"Vad är huvudstaden i Spanien?\", correctAnswer: \"Madrid\" },\r\n      { question: \"Vad är huvudstaden i Sverige?\", correctAnswer: \"Stockholm\" },\r\n    ]);\r\n  }, []);\r\n\r\n  \r\n  // Funktion för att hantera inlämning av svar\r\n  const handleAnswerSubmit = (event) => {\r\n    setScore(myNumber+1);\r\n    event.preventDefault(); // Förhindra standardbeteende för formulär\r\n    // Kontrollera om användarens svar är korrekt och uppdatera poängen\r\n    if (userAnswer.toLowerCase() === questions[currentQuestionIndex].correctAnswer.toLowerCase()) {\r\n      setScore(score + 1);\r\n    }\r\n    // Återställ användarens svar och flytta till nästa fråga\r\n    setUserAnswer('');\r\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    answerInputRef.current && answerInputRef.current.focus();\r\n  };\r\n\r\n  const restartQuiz = () => {\r\n    setCurrentQuestionIndex(0);\r\n    setScore(0);\r\n    setUserAnswer('');\r\n  };\r\n\r\n  if (currentQuestionIndex >= questions.length) {\r\n    return <Result score={score} totalQuestions={questions.length} onRestart={restartQuiz} />;\r\n  }\r\n\r\n  // Annars visa quizet med fråga, poäng och svarsformulär\r\n  return (\r\n    <div>\r\n      <Question question={questions[currentQuestionIndex].question} />\r\n      Fråga : {myNumber}\r\n      <form onSubmit={handleAnswerSubmit}>\r\n        <input \r\n          ref={answerInputRef}\r\n          value={userAnswer}\r\n          onChange={(e) => setUserAnswer(e.target.value)}\r\n          type=\"text\" \r\n          placeholder=\"Ditt svar\" \r\n        />\r\n        <button type=\"submit\">Nästa</button>\r\n        <ScoreBoard score={score} totalQuestions={questions.length} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}