{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yes\\\\OneDrive\\\\Skrivbord\\\\Todo\\\\min-nya-app\\\\src\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  // Tillstånd för att hantera quizfrågor, aktuell fråga, användarens svar och resultat\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const answerInputRef = useRef(null);\n\n  // Hämta quizfrågor (förenklad version)\n  useEffect(() => {\n    setQuestions([{\n      question: \"Vad är huvudstaden i Frankrike?\",\n      options: [\"Paris\", \"London\", \"Berlin\", \"Madrid\"],\n      correctAnswer: \"Paris\"\n    }\n    // Lägg till fler frågor här\n    ]);\n  }, []);\n\n  // Hantera användarens svar\n  const handleAnswerSubmit = event => {\n    event.preventDefault();\n    if (userAnswer === questions[currentQuestionIndex].correctAnswer) {\n      setScore(score + 1);\n    }\n    setUserAnswer(''); // Återställ svaret\n    setCurrentQuestionIndex(currentQuestionIndex + 1); // Gå till nästa fråga\n    answerInputRef.current.focus(); // Fokusera på inputfältet för nästa fråga\n  };\n\n  // Kontrollera om quizet är slut\n  if (currentQuestionIndex >= questions.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Ditt resultat: \", score, \"/\", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: questions[currentQuestionIndex].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAnswerSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: answerInputRef,\n        value: userAnswer,\n        onChange: e => setUserAnswer(e.target.value),\n        type: \"text\",\n        placeholder: \"Ditt svar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"N\\xE4sta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"s8ItcWkA3f0mPm4QnAHD50me9Hc=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Quiz","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","userAnswer","setUserAnswer","score","setScore","answerInputRef","question","options","correctAnswer","handleAnswerSubmit","event","preventDefault","current","focus","length","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","ref","value","onChange","e","target","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/yes/OneDrive/Skrivbord/Todo/min-nya-app/src/Quiz.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst Quiz = () => {\r\n  // Tillstånd för att hantera quizfrågor, aktuell fråga, användarens svar och resultat\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n  const [score, setScore] = useState(0);\r\n  const answerInputRef = useRef(null);\r\n\r\n  // Hämta quizfrågor (förenklad version)\r\n  useEffect(() => {\r\n    setQuestions([\r\n      { question: \"Vad är huvudstaden i Frankrike?\", options: [\"Paris\", \"London\", \"Berlin\", \"Madrid\"], correctAnswer: \"Paris\" },\r\n      // Lägg till fler frågor här\r\n    ]);\r\n  }, []);\r\n\r\n  // Hantera användarens svar\r\n  const handleAnswerSubmit = (event) => {\r\n    event.preventDefault();\r\n    if(userAnswer === questions[currentQuestionIndex].correctAnswer) {\r\n      setScore(score + 1);\r\n    }\r\n    setUserAnswer(''); // Återställ svaret\r\n    setCurrentQuestionIndex(currentQuestionIndex + 1); // Gå till nästa fråga\r\n    answerInputRef.current.focus(); // Fokusera på inputfältet för nästa fråga\r\n  };\r\n\r\n  // Kontrollera om quizet är slut\r\n  if(currentQuestionIndex >= questions.length) {\r\n    return <div>Ditt resultat: {score}/{questions.length}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{questions[currentQuestionIndex].question}</h2>\r\n      <form onSubmit={handleAnswerSubmit}>\r\n        <input \r\n          ref={answerInputRef}\r\n          value={userAnswer}\r\n          onChange={(e) => setUserAnswer(e.target.value)}\r\n          type=\"text\" \r\n          placeholder=\"Ditt svar\"\r\n        />\r\n        <button type=\"submit\">Nästa</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMe,cAAc,GAAGb,MAAM,CAAC,IAAI,CAAC;;EAEnC;EACAD,SAAS,CAAC,MAAM;IACdO,YAAY,CAAC,CACX;MAAEQ,QAAQ,EAAE,iCAAiC;MAAEC,OAAO,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;MAAEC,aAAa,EAAE;IAAQ;IACxH;IAAA,CACD,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAGV,UAAU,KAAKJ,SAAS,CAACE,oBAAoB,CAAC,CAACS,aAAa,EAAE;MAC/DJ,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB;IACAD,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;IACnBF,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC,CAAC,CAAC;IACnDM,cAAc,CAACO,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC;;EAED;EACA,IAAGd,oBAAoB,IAAIF,SAAS,CAACiB,MAAM,EAAE;IAC3C,oBAAOpB,OAAA;MAAAqB,QAAA,GAAK,iBAAe,EAACZ,KAAK,EAAC,GAAC,EAACN,SAAS,CAACiB,MAAM;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC7D;EAEA,oBACEzB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAKlB,SAAS,CAACE,oBAAoB,CAAC,CAACO;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnDzB,OAAA;MAAM0B,QAAQ,EAAEX,kBAAmB;MAAAM,QAAA,gBACjCrB,OAAA;QACE2B,GAAG,EAAEhB,cAAe;QACpBiB,KAAK,EAAErB,UAAW;QAClBsB,QAAQ,EAAGC,CAAC,IAAKtB,aAAa,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CI,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC;MAAW;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFzB,OAAA;QAAQgC,IAAI,EAAC,QAAQ;QAAAX,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACvB,EAAA,CA/CID,IAAI;AAAAiC,EAAA,GAAJjC,IAAI;AAiDV,eAAeA,IAAI;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}