{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yes\\\\OneDrive\\\\Skrivbord\\\\Todo\\\\min-nya-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react'; // Importera React och useState-hooket från React\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Skapa tillståndsvariabler för uppgifter (tasks) och det nya uppgiftsfältet (newTask)\n  const [tasks, setTasks] = useState([\"Task 1\", \"Task 2\", \"Task 3\"]);\n  const [newTask, setNewTask] = useState(\"\");\n\n  // Funktion för att lägga till en ny uppgift\n  const handleAddTask = () => {\n    if (newTask.trim() !== \"\") {\n      // Kontrollera om det nya uppgiftsfältet inte är tomt\n      setTasks([...tasks, newTask]); // Lägg till den nya uppgiften till uppgiftslistan\n      setNewTask(\"\"); // Återställ det nya uppgiftsfältet till tom sträng\n    }\n  };\n\n  // Funktion för att hantera ändringar i det nya uppgiftsfältet\n  const handleChange = event => {\n    setNewTask(event.target.value); // Uppdatera värdet för det nya uppgiftsfältet\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTask,\n      onChange: handleChange // Anropa handleChange-funktionen när användaren skriver i fältet\n      ,\n      placeholder: \"Add new task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTasks(tasks.filter((_, i) => i !== index)),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Axgbu+3mhkE4MxV3ko8qrwg0QpM=\");\n_c = App;\nexport default App; // Exportera App-komponenten för att kunna använda den i andra filer\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTask","setNewTask","handleAddTask","trim","handleChange","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","map","task","index","filter","_","i","_c","$RefreshReg$"],"sources":["C:/Users/yes/OneDrive/Skrivbord/Todo/min-nya-app/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react'; // Importera React och useState-hooket från React\n\nfunction App() {\n  // Skapa tillståndsvariabler för uppgifter (tasks) och det nya uppgiftsfältet (newTask)\n  const [tasks, setTasks] = useState([\"Task 1\", \"Task 2\", \"Task 3\"]);\n  const [newTask, setNewTask] = useState(\"\");\n\n  // Funktion för att lägga till en ny uppgift\n  const handleAddTask = () => {\n    if (newTask.trim() !== \"\") { // Kontrollera om det nya uppgiftsfältet inte är tomt\n      setTasks([...tasks, newTask]); // Lägg till den nya uppgiften till uppgiftslistan\n      setNewTask(\"\"); // Återställ det nya uppgiftsfältet till tom sträng\n    }\n  };\n\n  // Funktion för att hantera ändringar i det nya uppgiftsfältet\n  const handleChange = (event) => {\n    setNewTask(event.target.value); // Uppdatera värdet för det nya uppgiftsfältet\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Todo List</h1>\n      <input\n        type=\"text\"\n        value={newTask}\n        onChange={handleChange} // Anropa handleChange-funktionen när användaren skriver i fältet\n        placeholder=\"Add new task\"\n      />\n      <button onClick={handleAddTask}>Add Task</button> {/* Anropa handleAddTask-funktionen när knappen klickas */}\n      <ul>\n        {/* Loopa igenom varje uppgift i tasks och rendera dem */}\n        {tasks.map((task, index) => (\n          <li key={index}>\n            {task} {/* Visa uppgiften */}\n            <button onClick={() => setTasks(tasks.filter((_, i) => i !== index))}>Delete</button> {/* Skapa en knapp för att ta bort uppgiften */}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App; // Exportera App-komponenten för att kunna använda den i andra filer\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;EAClE,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIF,OAAO,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAAE;MAC3BJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAC;MAC/BC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB;EACF,CAAC;;EAED;EACA,MAAMG,YAAY,GAAIC,KAAK,IAAK;IAC9BJ,UAAU,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBd,OAAA;MAAAc,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBlB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXP,KAAK,EAAEP,OAAQ;MACfe,QAAQ,EAAEX,YAAa,CAAC;MAAA;MACxBY,WAAW,EAAC;IAAc;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACFlB,OAAA;MAAQsB,OAAO,EAAEf,aAAc;MAAAO,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC,eAClDlB,OAAA;MAAAc,QAAA,EAEGX,KAAK,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBzB,OAAA;QAAAc,QAAA,GACGU,IAAI,EAAC,GAAC,eACPxB,OAAA;UAAQsB,OAAO,EAAEA,CAAA,KAAMlB,QAAQ,CAACD,KAAK,CAACuB,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKH,KAAK,CAAC,CAAE;UAAAX,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC;MAAA,GAF/EO,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAChB,EAAA,CAvCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAyCZ,eAAeA,GAAG,CAAC,CAAC;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}